{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://todo-list/./src/modules/events.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://todo-list/./node_modules/date-fns/esm/toDate/index.js","webpack://todo-list/./node_modules/date-fns/esm/startOfDay/index.js","webpack://todo-list/./node_modules/date-fns/esm/startOfToday/index.js","webpack://todo-list/./node_modules/date-fns/esm/endOfYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://todo-list/./node_modules/date-fns/esm/addDays/index.js","webpack://todo-list/./node_modules/date-fns/esm/addMonths/index.js","webpack://todo-list/./src/modules/todo.js","webpack://todo-list/./src/modules/project.js","webpack://todo-list/./src/modules/localStorage.js","webpack://todo-list/./node_modules/date-fns/esm/startOfYesterday/index.js","webpack://todo-list/./node_modules/date-fns/esm/startOfTomorrow/index.js","webpack://todo-list/./node_modules/date-fns/esm/add/index.js","webpack://todo-list/./src/modules/components.js","webpack://todo-list/./src/modules/dom.js","webpack://todo-list/./src/modules/todoList.js","webpack://todo-list/./node_modules/date-fns/esm/isYesterday/index.js","webpack://todo-list/./node_modules/date-fns/esm/isThisYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/isPast/index.js","webpack://todo-list/./node_modules/date-fns/esm/isSameDay/index.js","webpack://todo-list/./node_modules/date-fns/esm/isToday/index.js","webpack://todo-list/./node_modules/date-fns/esm/isTomorrow/index.js","webpack://todo-list/./node_modules/date-fns/esm/subDays/index.js","webpack://todo-list/./node_modules/date-fns/esm/isSameYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/isDate/index.js","webpack://todo-list/./node_modules/date-fns/esm/isValid/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://todo-list/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://todo-list/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://todo-list/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://todo-list/./node_modules/date-fns/esm/format/index.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/rng.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/regex.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/validate.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/v4.js","webpack://todo-list/./src/index.js"],"sourcesContent":["export default function addGlobalEventListener(type, selector, callback) {\n    document.addEventListener(type, (e) => {\n        if (e.target.matches(selector)) callback(e);\n    });\n}\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import {\n    endOfYear,\n    add,\n    startOfToday,\n    startOfTomorrow,\n    startOfYesterday,\n} from 'date-fns';\nimport { generateId, formatDateForDatePicker } from './todoList';\n\nexport default class Todo {\n    constructor(name, dueDate, id) {\n        this.name = name;\n        this.dueDate = dueDate;\n        this.isComplete = false;\n        this.id = generateId();\n    }\n}\n\nexport function createDefaultTodos() {\n    const yesterdayDate = formatDateForDatePicker(startOfYesterday());\n    const todayDate = formatDateForDatePicker(startOfToday());\n    const tomorrowDate = formatDateForDatePicker(startOfTomorrow());\n    const endOfYearDate = formatDateForDatePicker(endOfYear(startOfToday()));\n    const startOfNextYearDate = formatDateForDatePicker(\n        add(endOfYear(startOfToday()), { days: 1 })\n    );\n\n    return [\n        new Todo('Pay Bills', yesterdayDate),\n        new Todo('Grocery Shopping', todayDate),\n        new Todo('Visit Best Friend', tomorrowDate),\n        new Todo('Prep for New Years party', endOfYearDate),\n        new Todo('Write down New Years resolutions', startOfNextYearDate),\n    ];\n}\n","import { generateId } from './todoList';\nimport { createDefaultTodos } from './todo';\n\nexport default class Project {\n    constructor(name, color) {\n        this.name = name;\n        this.color = color;\n        this.id = generateId();\n        this.todoList = [];\n        this.showCompleteTodos = false;\n    }\n}\n\nexport function createDefaultProject() {\n    const defaultProject = new Project('Default', 'grey');\n    const defaultTodos = createDefaultTodos();\n\n    defaultTodos.forEach((todo) => {\n        defaultProject.todoList.push(todo);\n    });\n\n    return defaultProject;\n}\n","import { createDefaultProject } from './project';\nimport { editObject } from './todoList';\n\nconst LOCAL_STORAGE_PROJECTS_KEY = 'todoList.projects';\nconst LOCAL_STORAGE_SELECTED_PROJECT_ID_KEY = 'todoList.selectedProjectId';\n\nexport function getProjects() {\n    if (isLocalStorageKeyPopulated(LOCAL_STORAGE_PROJECTS_KEY)) {\n        return JSON.parse(localStorage.getItem(LOCAL_STORAGE_PROJECTS_KEY));\n    }\n    const projects = [];\n    const defaultProject = createDefaultProject();\n\n    projects.push(defaultProject);\n\n    saveProjects(projects);\n    saveSelectedProjectId(defaultProject.id);\n\n    return projects;\n}\n\nexport function addProject(project) {\n    const projects = getProjects();\n    projects.push(project);\n    saveProjects(projects);\n}\n\nexport function removeProject(projectId) {\n    let projects = getProjects();\n    projects = projects.filter((project) => project.id !== projectId);\n    saveProjects(projects);\n}\n\nexport function addTodo(todo, projectId) {\n    const projects = getProjects();\n\n    projects.forEach((project) => {\n        if (project.id === projectId) {\n            project.todoList.push(todo);\n        }\n    });\n\n    saveProjects(projects);\n    sortTodos(projectId);\n}\n\nexport function deleteTodo(todoId, projectId) {\n    const projects = getProjects();\n\n    projects.forEach((project) => {\n        if (project.id === projectId) {\n            project.todoList = project.todoList.filter(\n                (todo) => todo.id !== todoId\n            );\n        }\n    });\n\n    saveProjects(projects);\n}\n\nexport function editTodo(todoId, projectId, properties) {\n    let projects = getProjects();\n\n    projects.forEach((project) => {\n        if (project.id === projectId) {\n            project.todoList.forEach((todo) => {\n                if (todo.id === todoId) {\n                    editObject(todo, properties);\n                }\n            });\n        }\n    });\n\n    saveProjects(projects);\n    sortTodos(projectId);\n}\n\nexport function editProject(projectId, properties) {\n    let projects = getProjects();\n\n    projects.forEach((project) => {\n        if (project.id === projectId) {\n            editObject(project, properties);\n        }\n    });\n\n    saveProjects(projects);\n}\n\nexport function sortTodos(projectId) {\n    let projects = getProjects();\n\n    projects.forEach((project) => {\n        if (project.id === projectId) {\n            project.todoList = project.todoList.sort(\n                (a, b) => a.isComplete - b.isComplete\n            );\n        }\n    });\n\n    saveProjects(projects);\n}\n\nfunction isLocalStorageKeyPopulated(key) {\n    return !!localStorage.getItem(key);\n}\n\nfunction saveProjects(projects) {\n    localStorage.setItem(LOCAL_STORAGE_PROJECTS_KEY, JSON.stringify(projects));\n}\n\nexport function getSelectedProjectId() {\n    return localStorage.getItem(LOCAL_STORAGE_SELECTED_PROJECT_ID_KEY);\n}\n\nexport function saveSelectedProjectId(projectId) {\n    localStorage.setItem(LOCAL_STORAGE_SELECTED_PROJECT_ID_KEY, projectId);\n}\n\nexport function removeSelectedProjectId() {\n    localStorage.removeItem(LOCAL_STORAGE_SELECTED_PROJECT_ID_KEY);\n}\n","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import { getSelectedProjectId } from './localStorage';\nimport { highlightProjectBtn, setEyeBtnTitle, toggleEyeIcon } from './dom';\nimport { getTodoCount, formatDate, getDateColor } from './todoList';\n\nconst templates = {\n    project: document.querySelector('[data-template=\"project\"'),\n    projectView: document.querySelector('[data-template=\"project-view\"]'),\n    todo: document.querySelector('[data-template=\"todo\"]'),\n    todoModal: document.querySelector('[data-template=\"modal-todo\"]'),\n};\n\nfunction getFragmentFromTemplate(template) {\n    if (template == null) return null;\n    return document.importNode(template.content, true);\n}\n\nfunction createTodoModal(\n    modalId,\n    modalTitleText,\n    formDatasetForm,\n    todoNameInputId,\n    todoDueDateInputId,\n    submitBtnText\n) {\n    const fragment = getFragmentFromTemplate(templates.todoModal);\n\n    const modal = fragment.querySelector('.modal');\n    const modalTitle = fragment.querySelector('.modal__title');\n    const form = fragment.querySelector('form');\n    const todoNameLabel = form.querySelector('[data-label=\"todo-name\"]');\n    const todoNameInput = form.querySelector('[data-input=\"todo-name\"]');\n    const todoDueDateLabel = form.querySelector('[data-label=\"todo-due-date\"]');\n    const todoDueDateInput = form.querySelector('[data-input=\"todo-due-date\"]');\n    const submitBtn = form.querySelector('[type=\"submit\"]');\n\n    modal.id = modalId;\n    todoNameInput.id = todoNameInputId;\n    todoDueDateInput.id = todoDueDateInputId;\n\n    form.dataset.form = formDatasetForm;\n\n    todoNameLabel.setAttribute('for', todoNameInputId);\n    todoDueDateLabel.setAttribute('for', todoDueDateInputId);\n\n    modalTitle.textContent = modalTitleText;\n    submitBtn.textContent = submitBtnText;\n\n    return fragment;\n}\n\nexport function createProjectComponent(project) {\n    const fragment = getFragmentFromTemplate(templates.project);\n\n    const projectTitle = fragment.querySelector('.project-name');\n    const projectColor = fragment.querySelector('.project-color');\n    const todoCount = fragment.querySelector('.todo-count');\n    const projectEl = fragment.querySelector('.project');\n\n    projectEl.dataset.projectId = project.id;\n    projectTitle.textContent = project.name;\n    todoCount.textContent = getTodoCount(project);\n    projectColor.style.color = project.color;\n\n    if (project.id === getSelectedProjectId()) {\n        const projectRowBtn = fragment.querySelector(\n            '[data-btn=\"show-project-view\"]'\n        );\n        highlightProjectBtn(projectRowBtn);\n    }\n\n    return fragment;\n}\n\nexport function createProjectViewComponent(project) {\n    const fragment = getFragmentFromTemplate(templates.projectView);\n\n    const container = fragment.querySelector('.project-view');\n    const projectName = fragment.querySelector('.project-name');\n    const todoContainer = fragment.querySelector(\n        '[data-container=\"todo-container\"]'\n    );\n    const eyeBtn = fragment.querySelector('[data-btn=\"toggle-complete-todos\"]');\n    const eyeIcon = fragment.querySelector('.fa-eye');\n\n    container.dataset.projectId = project.id;\n    projectName.textContent = project.name;\n\n    project.todoList.forEach((todo) => {\n        const todoComponent = createTodoComponent(todo);\n        todoContainer.appendChild(todoComponent);\n    });\n\n    if (project.showCompleteTodos) {\n        toggleEyeIcon(eyeIcon);\n        todoContainer.style.setProperty('--complete-todo-display', 'flex');\n    } else {\n        todoContainer.style.setProperty('--complete-todo-display', 'none');\n    }\n\n    setEyeBtnTitle(eyeBtn, project.showCompleteTodos);\n\n    return fragment;\n}\n\nexport function createTodoComponent(todo) {\n    const fragment = getFragmentFromTemplate(templates.todo);\n    const todoEl = fragment.querySelector('.todo');\n    const todoCheckbox = fragment.querySelector('[data-checkbox=\"todo\"]');\n    const todoLabel = fragment.querySelector('[data-label=\"todo-checkbox\"]');\n    const todoName = fragment.querySelector('.todo-name');\n    const todoDueDate = fragment.querySelector('.todo-due-date');\n\n    todoEl.dataset.todoId = todo.id;\n    if (todo.isComplete) todoEl.classList.add('todo--complete');\n    todoCheckbox.id = `todo-checkbox-${todo.id}`;\n    todoCheckbox.checked = todo.isComplete;\n    todoLabel.setAttribute('for', `todo-checkbox-${todo.id}`);\n    todoName.textContent = todo.name;\n    todoDueDate.textContent = formatDate(todo.dueDate);\n    todoDueDate.style.color = getDateColor(todo.dueDate);\n\n    return fragment;\n}\n\nexport function createModals() {\n    const modals = [];\n\n    const addTodoModal = createTodoModal(\n        'modal-add-todo',\n        'Add Todo',\n        'add-todo',\n        'input-add-todo-name',\n        'input-add-todo-due-date',\n        'Add'\n    );\n    const editTodoModal = createTodoModal(\n        'modal-edit-todo',\n        'Edit Todo',\n        'edit-todo',\n        'input-edit-todo-name',\n        'input-edit-todo-due-date',\n        'Edit'\n    );\n\n    modals.push(addTodoModal, editTodoModal);\n\n    return modals;\n}\n","import * as comp from './components';\nimport { getProjects } from './localStorage';\nimport { getTodoCount } from './todoList';\n\nconst HIGHLIGHT_PROJECT_CSS_CLASS = 'project-row-btn--highlight';\n\nconst elems = {\n    body: document.body,\n    sideMenu: document.querySelector('[data-side-menu]'),\n    overlay: document.getElementById('overlay'),\n    projectsContainer: document.getElementById('projects-container'),\n    projectNameInput: document.getElementById('input-project-name'),\n    projectColorInput: document.getElementById('input-project-color'),\n    projectViewContainer: document.querySelector(\n        '[data-container=\"project-view\"]'\n    ),\n};\n\nexport function toggleSideMenu() {\n    if (elems.sideMenu == null) return;\n\n    if (isDesktopView()) {\n        elems.body.classList.toggle('desktop-open');\n        elems.sideMenu.classList.remove('mobile-open');\n    } else if (!elems.body.classList.contains('desktop-open')) {\n        elems.body.classList.add('desktop-open');\n        elems.sideMenu.classList.toggle('mobile-open');\n    } else {\n        elems.sideMenu.classList.toggle('mobile-open');\n    }\n}\n\nexport function showModalAndOverlay(modal) {\n    showModal(modal);\n    showOverlay();\n}\n\nexport function hideAllModalsAndOverlay() {\n    // get all active modals\n    const modals = document.querySelectorAll('.modal--active');\n\n    // loop through open modals and close them\n    modals.forEach((modal) => {\n        hideModal(modal);\n    });\n\n    hideOverlay();\n}\n\nexport function closeModalAndHideOverlay(modal) {\n    hideModal(modal);\n    hideOverlay();\n}\n\nexport function getCreateProjectFormData() {\n    // get the form elements values\n    const projectName = elems.projectNameInput.value;\n    const projectColor =\n        elems.projectColorInput.options[elems.projectColorInput.selectedIndex]\n            .dataset.cssColor;\n\n    return {\n        name: projectName,\n        color: projectColor,\n    };\n}\n\nexport function renderProjects() {\n    const fragment = document.createDocumentFragment();\n    const projects = getProjects();\n\n    projects.forEach((project) => {\n        const projectComponent = comp.createProjectComponent(project);\n        fragment.appendChild(projectComponent);\n    });\n\n    removeAllChildElements(elems.projectsContainer);\n    elems.projectsContainer.appendChild(fragment);\n}\n\nexport function renderProjectView(project) {\n    if (project == null) {\n        openSideMenuMobile();\n    } else {\n        const projectViewComponent = comp.createProjectViewComponent(project);\n        removeProjectView();\n        elems.projectViewContainer.appendChild(projectViewComponent);\n    }\n}\n\nexport function removeProjectView() {\n    removeAllChildElements(elems.projectViewContainer);\n}\n\nexport function highlightProjectBtn(btn) {\n    removeHighlightedProjectBtn();\n    btn.classList.add(HIGHLIGHT_PROJECT_CSS_CLASS);\n}\n\nexport function updateTodoCount(project) {\n    const todoCountEl = document.querySelector(\n        `[data-project-id=\"${project.id}\"] [data-todo-count]`\n    );\n    const todoCount = getTodoCount(project);\n\n    todoCountEl.textContent = todoCount;\n}\n\nexport function getTodoFormData(form) {\n    const todoName = form.querySelector('[data-input=\"todo-name\"]').value;\n    const todoDueDate = form.querySelector(\n        '[data-input=\"todo-due-date\"]'\n    ).value;\n\n    return {\n        name: todoName,\n        dueDate: todoDueDate,\n    };\n}\n\nexport function renderModals() {\n    const modals = comp.createModals();\n    modals.forEach((modal) => {\n        elems.body.append(modal);\n    });\n}\n\nexport function toggleTodoContainerDisplay() {\n    const todoContainer = elems.projectViewContainer.querySelector(\n        '[data-container=\"todo-container\"]'\n    );\n    const completeTodoDisplay = getComputedStyle(todoContainer)\n        .getPropertyValue('--complete-todo-display')\n        .trim();\n\n    todoContainer.style.setProperty(\n        '--complete-todo-display',\n        completeTodoDisplay === 'none' ? 'flex' : 'none'\n    );\n}\n\nexport function toggleEyeIcon(element) {\n    element.classList.toggle('fa-eye');\n    element.classList.toggle('fa-eye-slash');\n}\n\nexport function setEyeBtnTitle(eyeBtn, showCompleteTodos) {\n    const showCompleteTodosText = 'Show Complete Todos';\n    const hideCompleteTodosText = 'Hide Complete Todos';\n\n    const titleText = showCompleteTodos\n        ? hideCompleteTodosText\n        : showCompleteTodosText;\n\n    eyeBtn.setAttribute('title', titleText);\n}\n\nexport function closeSideMenuMobile() {\n    elems.sideMenu.classList.remove('mobile-open');\n}\n\nexport function openSideMenuMobile() {\n    elems.sideMenu.classList.add('mobile-open');\n}\n\nexport function setTabIndex(element, tabIndex) {\n    element.setAttribute('tabIndex', tabIndex);\n}\n\nexport function getKeyboardFocusableElements(element = document) {\n    return [\n        ...element.querySelectorAll(\n            'a, button, input, textarea, select, details,[tabindex]:not([tabindex=\"-1\"])'\n        ),\n    ].filter((el) => !el.hasAttribute('disabled'));\n}\n\nexport function removeTabbableFromElements(element) {\n    const focusableElements = getKeyboardFocusableElements(element);\n\n    focusableElements.forEach((el) => {\n        setTabIndex(el, -1);\n    });\n}\n\nexport function addTabbableToElements(element) {\n    const focusableElements = getKeyboardFocusableElements(element);\n\n    focusableElements.forEach((el) => {\n        setTabIndex(el, 0);\n    });\n}\n\nexport function removeTabbableFromModalElements() {\n    // get all modals\n    const modals = [...document.querySelectorAll('.modal')];\n\n    // get all focusable elements in modals\n    const modalFocusableElements = modals\n        .map(getKeyboardFocusableElements)\n        .flat();\n\n    modalFocusableElements.forEach((element) => setTabIndex(element, -1));\n}\n\nfunction showModal(modal) {\n    // check modal exists\n    if (modal == null) return;\n\n    // show modal\n    modal.classList.add('modal--active');\n}\n\nfunction showOverlay() {\n    // check overlay exists\n    if (elems.overlay == null) return;\n    // show overlay\n    elems.overlay.classList.add('active');\n}\n\nfunction hideModal(modal) {\n    // check modal exists\n    if (modal == null) return;\n\n    // hide modal\n    modal.classList.remove('modal--active');\n}\n\nfunction hideOverlay() {\n    // check overlay exists\n    if (elems.overlay == null) return;\n\n    // hide overlay\n    elems.overlay.classList.remove('active');\n}\n\nfunction isDesktopView() {\n    return window.matchMedia('(min-width: 768px)').matches;\n}\n\nfunction removeAllChildElements(element) {\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n}\n\nfunction removeHighlightedProjectBtn() {\n    const highlightedBtn = document.querySelector(\n        `.${HIGHLIGHT_PROJECT_CSS_CLASS}`\n    );\n\n    if (highlightedBtn == null) return;\n\n    highlightedBtn.classList.remove(HIGHLIGHT_PROJECT_CSS_CLASS);\n}\n","import addGlobalEventListener from './events';\nimport * as dom from './dom';\nimport Project from './project';\nimport * as ls from './localStorage';\nimport Todo from './todo';\nimport {\n    format,\n    isThisYear,\n    isToday,\n    isTomorrow,\n    isYesterday,\n    isPast,\n} from 'date-fns';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport function initGlobalEventListeners() {\n    addGlobalEventListener('click', '[data-header-toggle]', dom.toggleSideMenu);\n\n    addGlobalEventListener('click', '[data-modal-target]', (e) => {\n        const el = e.target;\n        const modal = document.querySelector(el.dataset.modalTarget);\n\n        if (el.dataset.btn === 'edit-todo') {\n            const projectId = getClosestProjectId(el);\n            const todoId = getClosestTodoId(el);\n            const todo = getTodoById(projectId, todoId);\n            populateTodoForm(todo, modal);\n        }\n\n        handleOpenModal(modal);\n    });\n\n    addGlobalEventListener('click', '#overlay', handleCloseModal);\n\n    addGlobalEventListener(\n        'click',\n        '[data-btn=\"close-modal\"]',\n        handleCloseModal\n    );\n\n    addGlobalEventListener(\n        'submit',\n        '[data-form=\"create-project\"]',\n        handleCreateProjectFormSubmit\n    );\n\n    addGlobalEventListener(\n        'submit',\n        '[data-form=\"add-todo\"]',\n        handleAddTodoForm\n    );\n\n    addGlobalEventListener(\n        'submit',\n        '[data-form=\"edit-todo\"]',\n        handleEditTodoForm\n    );\n\n    addGlobalEventListener('click', '[data-btn=\"show-project-view\"]', (e) => {\n        const projectBtn = e.target;\n        const projectId = getClosestProjectId(projectBtn);\n\n        dom.closeSideMenuMobile();\n\n        // return if project is already selected\n        if (projectId === ls.getSelectedProjectId()) return;\n\n        const project = getProjectById(projectId);\n\n        handleProjectViewChange(project);\n    });\n\n    addGlobalEventListener('click', '[data-btn=\"delete-project\"]', (e) => {\n        const projectId = getClosestProjectId(e.target);\n\n        ls.removeProject(projectId);\n        dom.renderProjects();\n\n        if (projectId === ls.getSelectedProjectId()) {\n            ls.removeSelectedProjectId();\n            dom.openSideMenuMobile();\n            dom.removeProjectView();\n        }\n    });\n\n    addGlobalEventListener('click', '[data-btn=\"delete-todo\"]', (e) => {\n        const projectId = getClosestProjectId(e.target);\n        const todoId = getClosestTodoId(e.target);\n\n        deleteTodo(todoId, projectId);\n    });\n\n    addGlobalEventListener(\n        'change',\n        '[data-checkbox=\"todo\"]',\n        handleTodoCheckboxChange\n    );\n\n    addGlobalEventListener(\n        'click',\n        '[data-btn=\"toggle-complete-todos\"]',\n        handleToggleCompleteTodos\n    );\n}\n\nexport function getSelectedProject() {\n    const selectedProjectId = ls.getSelectedProjectId();\n    return getProjectById(selectedProjectId);\n}\n\nexport function generateId() {\n    return uuidv4();\n}\n\nexport function editObject(object, properties) {\n    for (const property in properties) {\n        object[property] = properties[property];\n    }\n}\n\nexport function getTodoCount(project) {\n    return project.todoList.filter((todo) => !todo.isComplete).length || '';\n}\n\nexport function formatDate(date) {\n    if (date === '') return date;\n\n    const newDate = new Date(date);\n\n    if (isToday(newDate)) return 'Today';\n    if (isTomorrow(newDate)) return 'Tomorrow';\n    if (isYesterday(newDate)) return 'Yesterday';\n    if (isThisYear(newDate)) return format(newDate, 'do MMM');\n\n    return format(newDate, 'do MMM yyyy');\n}\n\nexport function formatDateForDatePicker(date) {\n    return format(date, 'yyyy-MM-dd');\n}\n\nexport function getDateColor(date) {\n    const greenColor = '#2ecc71';\n    const yellowColor = '#f1c40f';\n    const redColor = '#c0392b';\n\n    const newDate = new Date(date);\n\n    if (isToday(newDate)) return greenColor;\n    if (isTomorrow(newDate)) return yellowColor;\n    if (isPast(newDate)) return redColor;\n}\n\nfunction handleCreateProjectFormSubmit(e) {\n    e.preventDefault();\n\n    const form = e.target;\n    const formData = dom.getCreateProjectFormData();\n\n    if (!isValidCreateProjectFormData(formData)) return;\n\n    const formatedFormData = formatCreateProjectFormData(formData);\n    const project = new Project(formatedFormData.name, formatedFormData.color);\n\n    ls.addProject(project);\n    dom.renderProjects();\n    handleProjectViewChange(project);\n\n    form.reset();\n\n    const modal = form.closest('.modal');\n    handleCloseModal(modal);\n    dom.closeSideMenuMobile();\n}\n\nfunction isValidCreateProjectFormData(formData) {\n    return isValidName(formData.name);\n}\n\nfunction formatCreateProjectFormData(formData) {\n    // clone the object\n    const formDataClone = { ...formData };\n\n    // format data\n    formDataClone.name = formDataClone.name.trim();\n\n    return formDataClone;\n}\n\nfunction getClosestProjectId(element) {\n    const projectEl = element.closest('[data-project-id]');\n    return projectEl.dataset.projectId;\n}\n\nfunction getProjectById(projectId) {\n    return ls.getProjects().filter((project) => project.id === projectId)[0];\n}\n\nfunction getTodoById(projectId, todoId) {\n    const project = getProjectById(projectId);\n    return project.todoList.filter((todo) => todo.id === todoId)[0];\n}\n\nfunction handleProjectViewChange(project) {\n    ls.saveSelectedProjectId(project.id);\n    dom.highlightProjectBtn(getProjectBtn(project));\n    dom.renderProjectView(project);\n}\n\nfunction getProjectBtn(project) {\n    return document.querySelector(`li[data-project-id=\"${project.id}\"]`);\n}\n\nfunction handleAddTodoForm(e) {\n    e.preventDefault();\n\n    const form = e.target;\n    const formData = dom.getTodoFormData(form);\n\n    if (!isValidTodoFormData(formData)) return;\n\n    const formatedFormData = formatTodoFormData(formData);\n    const projectId = ls.getSelectedProjectId();\n    const todo = new Todo(formatedFormData.name, formatedFormData.dueDate);\n    const modal = form.closest('.modal');\n\n    addTodo(todo, projectId);\n\n    form.reset();\n    handleCloseModal();\n}\n\nfunction handleEditTodoForm(e) {\n    e.preventDefault();\n\n    const form = e.target;\n    const formData = dom.getTodoFormData(form);\n\n    if (!isValidTodoFormData(formData)) return;\n\n    const formatedFormData = formatTodoFormData(formData);\n    const projectId = ls.getSelectedProjectId();\n    const todoId = getClosestTodoId(form);\n    const modal = form.closest('.modal');\n\n    ls.editTodo(todoId, projectId, {\n        name: formatedFormData.name,\n        dueDate: formatedFormData.dueDate,\n    });\n\n    const project = getProjectById(projectId);\n\n    form.reset();\n    dom.renderProjectView(project);\n    handleCloseModal();\n}\n\nfunction addTodo(todo, projectId) {\n    // save todo to local storage\n    ls.addTodo(todo, projectId);\n\n    // get the updated project\n    const project = getProjectById(projectId);\n\n    dom.renderProjectView(project);\n    dom.updateTodoCount(project);\n}\n\nfunction isValidTodoFormData(formData) {\n    return isValidName(formData.name);\n}\n\nfunction isValidName(name) {\n    return name != null && name.trim() !== '';\n}\n\nfunction formatTodoFormData(formData) {\n    // clone the object\n    const formDataClone = { ...formData };\n\n    // format data\n    formDataClone.name = formDataClone.name.trim();\n\n    return formDataClone;\n}\n\nfunction getClosestTodoId(element) {\n    const todoEl = element.closest('[data-todo-id]');\n    return todoEl.dataset.todoId;\n}\n\nfunction deleteTodo(todoId, projectId) {\n    ls.deleteTodo(todoId, projectId);\n\n    // get the updated project\n    const project = getProjectById(projectId);\n\n    dom.renderProjectView(project);\n    dom.updateTodoCount(project);\n}\n\nfunction handleTodoCheckboxChange(e) {\n    const checkbox = e.target;\n    const todoEl = checkbox.closest('.todo');\n    const projectId = getClosestProjectId(checkbox);\n    const todoId = getClosestTodoId(checkbox);\n\n    todoEl.classList.toggle('todo--complete');\n\n    ls.editTodo(todoId, projectId, {\n        isComplete: checkbox.checked ? true : false,\n    });\n\n    const project = getProjectById(projectId);\n\n    dom.renderProjectView(project);\n    dom.updateTodoCount(project);\n}\n\nfunction populateTodoForm(todo, modal) {\n    const todoNameInput = modal.querySelector('#input-edit-todo-name');\n    const todoDueDateInput = modal.querySelector('#input-edit-todo-due-date');\n\n    modal.dataset.todoId = todo.id;\n\n    todoNameInput.value = todo.name;\n    todoDueDateInput.value = todo.dueDate;\n}\n\nfunction handleToggleCompleteTodos(e) {\n    const eyeBtn = e.target;\n    const eyeIcon = eyeBtn.querySelector('.fas');\n    const projectId = getClosestProjectId(eyeBtn);\n    const showCompleteTodos = eyeIcon.classList.contains('fa-eye')\n        ? true\n        : false;\n\n    ls.editProject(projectId, { showCompleteTodos: showCompleteTodos });\n\n    dom.toggleTodoContainerDisplay();\n    dom.toggleEyeIcon(eyeIcon);\n    dom.setEyeBtnTitle(eyeBtn, showCompleteTodos);\n}\n\nfunction handleOpenModal(modal) {\n    // make all focusable elements on page non tabbable\n    dom.removeTabbableFromElements(document);\n\n    // make all focusable elements on opened modal tabbable\n    dom.addTabbableToElements(modal);\n\n    // focus first input\n    modal.querySelector('input').focus();\n\n    dom.showModalAndOverlay(modal);\n}\n\nfunction handleCloseModal() {\n    // make all focusable elements on the page tabbable\n    dom.addTabbableToElements(document);\n\n    // make all focusable elements on all modals non tabbable\n    dom.removeTabbableFromModalElements();\n\n    // remove focus from currently focused element\n    document.activeElement.blur();\n\n    dom.hideAllModalsAndOverlay();\n}\n","import isSameDay from \"../isSameDay/index.js\";\nimport subDays from \"../subDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import isSameYear from \"../isSameYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n * \n * @example\n * // Are 4 September and 4 October in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n * \n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import {\n    initGlobalEventListeners,\n    getSelectedProject,\n} from './modules/todoList';\nimport { renderModals, renderProjects, renderProjectView } from './modules/dom';\nimport './styles/styles.css';\n\ninit();\n\nfunction init() {\n    renderModals();\n    renderProjects();\n    renderProjectView(getSelectedProject());\n    initGlobalEventListeners();\n}\n"],"names":["addGlobalEventListener","type","selector","callback","document","addEventListener","e","target","matches","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","startOfDay","dirtyDate","date","setHours","startOfToday","now","endOfYear","year","getFullYear","setFullYear","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","addDays","dirtyAmount","amount","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","daysInMonth","Todo","constructor","name","dueDate","id","this","isComplete","generateId","Project","color","todoList","showCompleteTodos","LOCAL_STORAGE_PROJECTS_KEY","LOCAL_STORAGE_SELECTED_PROJECT_ID_KEY","getProjects","localStorage","getItem","JSON","parse","projects","defaultProject","yesterdayDate","formatDateForDatePicker","month","day","todayDate","tomorrowDate","startOfTomorrow","endOfYearDate","startOfNextYearDate","duration","years","months","weeks","days","hours","minutes","seconds","dateWithMonths","dateWithDays","msToAdd","add","createDefaultTodos","forEach","todo","push","createDefaultProject","saveProjects","saveSelectedProjectId","editTodo","todoId","projectId","properties","project","editObject","sortTodos","sort","a","b","setItem","stringify","getSelectedProjectId","templates","querySelector","projectView","todoModal","getFragmentFromTemplate","template","importNode","content","createTodoModal","modalId","modalTitleText","formDatasetForm","todoNameInputId","todoDueDateInputId","submitBtnText","fragment","modal","modalTitle","form","todoNameLabel","todoNameInput","todoDueDateLabel","todoDueDateInput","submitBtn","dataset","setAttribute","textContent","HIGHLIGHT_PROJECT_CSS_CLASS","elems","body","sideMenu","overlay","getElementById","projectsContainer","projectNameInput","projectColorInput","projectViewContainer","toggleSideMenu","window","matchMedia","classList","toggle","remove","contains","renderProjects","createDocumentFragment","projectComponent","projectTitle","projectColor","todoCount","getTodoCount","style","highlightProjectBtn","appendChild","removeAllChildElements","renderProjectView","openSideMenuMobile","projectViewComponent","container","projectName","todoContainer","eyeBtn","eyeIcon","todoComponent","todoEl","todoCheckbox","todoLabel","todoName","todoDueDate","checked","newDate","isToday","isTomorrow","isSameDay","subDays","isYesterday","isSameYear","isThisYear","format","formatDate","isPast","getDateColor","createTodoComponent","toggleEyeIcon","setProperty","setEyeBtnTitle","removeProjectView","btn","highlightedBtn","removeHighlightedProjectBtn","updateTodoCount","todoCountEl","getTodoFormData","value","element","titleText","closeSideMenuMobile","setTabIndex","tabIndex","getKeyboardFocusableElements","querySelectorAll","filter","el","hasAttribute","addTabbableToElements","firstChild","removeChild","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","dateLeft","dateRight","isDate","isValid","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","options","undefined","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","code","formatDistance","token","count","result","tokenValue","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","addMilliseconds","timestamp","subMilliseconds","MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","addLeadingZeros","targetLength","sign","output","abs","signedYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","numberOfDigits","milliseconds","getUTCMilliseconds","pow","formatTimezoneShort","offset","dirtyDelimiter","absOffset","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","y","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","M","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","d","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","i","isoDayOfWeek","dayPeriodEnumValue","toLowerCase","B","h","H","K","k","m","s","S","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","longFormatters","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","getRandomValues","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","rnds8","Uint8Array","rng","crypto","bind","msCrypto","uuid","byteToHex","substr","buf","rnds","random","arr","property","handleCreateProjectFormSubmit","preventDefault","formData","selectedIndex","cssColor","isValidName","isValidCreateProjectFormData","formatedFormData","formDataClone","trim","formatCreateProjectFormData","handleProjectViewChange","reset","closest","handleCloseModal","getClosestProjectId","getProjectById","getProjectBtn","handleAddTodoForm","isValidTodoFormData","formatTodoFormData","handleEditTodoForm","getClosestTodoId","handleTodoCheckboxChange","checkbox","handleToggleCompleteTodos","completeTodoDisplay","getComputedStyle","getPropertyValue","flat","activeElement","blur","hideModal","modals","addTodoModal","editTodoModal","append","modalTarget","populateTodoForm","focus","showModal","handleOpenModal","removeItem"],"sourceRoot":""}